<Window x:Class="LiveCameraSample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LiveCameraSample"
        mc:Ignorable="d"
        Title="LiveCameraSample" Height="550" Width="725">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35" />
            <RowDefinition Height="*" />
            <RowDefinition Height="35" />
            <RowDefinition Height="35" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" Grid.Row="0" Name="ButtonBar">
            <ComboBox x:Name="CameraList" Width="100" Margin="5,5,0,5" Loaded="CameraList_Loaded" />
            <Button Content="Start Camera" Padding="5,0" Margin="5,5,0,5" Click="StartButton_Click" />
            <Button Content="Stop Camera" Padding="5,0" Margin="5,5,0,5" Click="StopButton_Click" />
            <TextBlock VerticalAlignment="Center" Margin="15,5,0,5" Text="Mode:" />
            <ComboBox x:Name="ModeList" Width="100" Margin="5,5,0,5" Loaded="ModeList_Loaded" SelectionChanged="ModeList_SelectionChanged" />
        </StackPanel>
        <Button Content="Show/Hide Settings" Padding="5,0" Margin="5" Click="SettingsButton_Click" HorizontalAlignment="Right" />
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ListBox x:Name="AttendeeList" Margin="10,5,238.333,5"/>
            <Image x:Name="LeftImage" Grid.Column="0" Margin="5,0,300,300" Visibility="Hidden" />
            <Image x:Name="RightImage" Margin="135,5,4.667,4.667" Panel.ZIndex="1" Grid.ColumnSpan="2" />
            <StackPanel Visibility="{Binding Source={StaticResource Settings}, Path=Default.SettingsPanelVisibility, Mode=TwoWay}" Grid.Column="1" Panel.ZIndex="2" Name="SettingsPanel" Background="LightGray" VerticalAlignment="Top" Margin="5">
                <TextBlock Margin="5" Grid.Row="0" FontWeight="Bold" Text="Settings"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Margin="5" Grid.Row="0" Grid.Column="0" Text="Face API Key:" />
                    <TextBox   Margin="5" Grid.Row="0" Grid.Column="1" Text="{Binding Source={StaticResource Settings}, Path=Default.FaceAPIKey, Mode=TwoWay}" />
                    <TextBlock Margin="5" Grid.Row="1" Grid.Column="0" Text="Face API Host:" />
                    <TextBox   Margin="5" Grid.Row="1" Grid.Column="1" Text="{Binding Source={StaticResource Settings}, Path=Default.FaceAPIHost, Mode=TwoWay}" />
                    <TextBlock Margin="5" Grid.Row="2" Grid.Column="0" Text="Vision API Key:" />
                    <TextBox   Margin="5" Grid.Row="2" Grid.Column="1" Text="{Binding Source={StaticResource Settings}, Path=Default.VisionAPIKey, Mode=TwoWay}" />
                    <TextBlock Margin="5" Grid.Row="3" Grid.Column="0" Text="Vision API Host:" />
                    <TextBox   Margin="5" Grid.Row="3" Grid.Column="1" Text="{Binding Source={StaticResource Settings}, Path=Default.VisionAPIHost, Mode=TwoWay}" />
                    <TextBlock Margin="5" Grid.Row="4" Grid.ColumnSpan="2" TextWrapping="Wrap"><Run Text="Get API keys at "/><Hyperlink NavigateUri="http://www.microsoft.com/cognitive" RequestNavigate="Hyperlink_RequestNavigate"><Run Text="microsoft.com/cognitive"/></Hyperlink></TextBlock>
                    <TextBlock Margin="5" Grid.Row="5" Grid.Column="0" Text="API Call Interval:" />
                    <TextBox   Margin="5" Grid.Row="5" Grid.Column="1" Text="{Binding Source={StaticResource Settings}, Path=Default.AnalysisInterval, Mode=TwoWay}" />
                    <TextBlock Margin="5" Grid.Row="6" Grid.ColumnSpan="2" TextWrapping="Wrap"><Run FontWeight="Bold" Text="Caution"/><Run Text=": Each video frame submitted to an API will count towards your transaction limit."/></TextBlock>
                </Grid>
                <TextBlock Margin="5,0,5,5">
                    <Run Text="Face API calls made = "/><Run Text="{Binding Source={StaticResource Settings}, Path=Default.FaceAPICallCount}"/><LineBreak />
                    <Run Text="Vision API calls made = "/><Run Text="{Binding Source={StaticResource Settings}, Path=Default.VisionAPICallCount}"/>
                </TextBlock>
                <CheckBox Margin="5" IsChecked="{Binding Source={StaticResource Settings}, Path=Default.AutoStopEnabled}" ContentStringFormat="Automatically stop after {0}" Content="{Binding Source={StaticResource Settings}, Path=Default.AutoStopTime}" />
                <Button Margin="5" Content="Save" Click="SaveSettingsButton_Click" />
            </StackPanel>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button x:Name="PersonGroupTraining" Grid.Column="0" Grid.Row="1" Width="300" Height="35" Background="#2196f3" Foreground="White" BorderBrush="Transparent" VerticalAlignment="Top" Margin="0,0,0,0" Content="Load PersonGroup" HorizontalAlignment="Left" Click="FolderPicker_Click" />
            <ListView Grid.Column="0" Grid.Row="0" Height="95" Width="325" HorizontalAlignment="Left" VerticalAlignment="Top" BorderBrush="Transparent" ItemsSource="{Binding Persons, ElementName=FaceIdentificationPane}" Margin="-1,40,0,-15" Visibility="Hidden">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Focusable" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.Style>
                    <Style TargetType="ListView">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}" Value="0">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Image Grid.Column="0" Height="64" Width="64" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,0,0">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Setter Property="Source" Value="/LiveCameraSample;component/Assets/default.jpg" />
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Style>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="8" />
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" Text="{Binding PersonName}" />
                            <ListView Grid.Row="1" ItemsSource="{Binding Faces}" BorderThickness="0" Margin="-6, 0, 0, 0">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel Orientation="Horizontal" MaxWidth="310" Margin="-1, -3, -1, -3"></WrapPanel>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Image Width="64" Height="64" Margin="1,3,1,3">
                                            <Image.Source>
                                                <CroppedBitmap Source="{Binding ImageFile}" SourceRect="{Binding UIRect}" />
                                            </Image.Source>
                                        </Image>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Focusable" Value="False" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsSelected" Value="true">
                                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                                        </Trigger>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsSelected" Value="true"/>
                                                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                                        </MultiTrigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Grid Width="300" Height="260" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.ColumnSpan="2" Margin="359,40,0,-180" >
                <ItemsControl HorizontalAlignment="Left" VerticalAlignment="Top" ItemsSource="{Binding TargetFaces, ElementName=FaceIdentificationPane}" Panel.ZIndex="999" Height="{Binding MaxImageSize, ElementName=FaceIdentificationPane}" Width="{Binding MaxImageSize, ElementName=FaceIdentificationPane}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" Height="{Binding MaxImageSize, ElementName=FaceIdentificationPane}" Width="{Binding MaxImageSize, ElementName=FaceIdentificationPane}" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="VerticalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Canvas>
                                <Grid  Canvas.Left="{Binding Left}" Canvas.Top="{Binding Top}" Background="#99000000" Height="14" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0, -14, 0, 0">
                                    <TextBlock Text="{Binding PersonName}" HorizontalAlignment="Left" Foreground="White" FontSize="11" Height="14" TextWrapping="WrapWithOverflow"/>
                                </Grid>
                                <Rectangle Canvas.Left="{Binding Left}" Canvas.Top="{Binding Top}" Width="{Binding Width}" Height="{Binding Height}" Stroke="#FF26B8F4" StrokeThickness="1" />
                            </Canvas>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Image HorizontalAlignment="Center" VerticalAlignment="Center" Height="{Binding MaxImageSize, ElementName=FaceIdentificationPane}" Width="{Binding MaxImageSize, ElementName=FaceDetectionPane}" x:Name="ImageDisplay" Visibility="Hidden">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{Binding SelectedFile, ElementName=FaceIdentificationPane}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedFile, ElementName=FaceIdentificationPane}" Value="{x:Null}">
                                    <Setter Property="Source" Value="/LiveCameraSample;component/Assets/default.jpg" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Grid>
            <Button Grid.Column="2" Grid.Row="1" Content="Choose Image" Width="300" Height="35" BorderBrush="Transparent" Foreground="White" Background="#2196f3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0, 0, 0, 0" IsEnabled="False" Name="IdentifyButton" Click="Identify_Click" Visibility="Hidden"/>

        </Grid>
        <TextBlock Name="MessageArea" Margin="5" Grid.Row="3" VerticalAlignment="Center" />
    </Grid>
</Window>
